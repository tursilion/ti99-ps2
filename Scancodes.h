//
// (C) 2007 Mike Brent aka Tursi aka HarmlessLion.com
// This software is provided AS-IS. No warranty
// express or implied is provided.
//
// This notice defines the entire license for this software.
// All rights not explicity granted here are reserved by the
// author.
//
// You may redistribute this software provided the original
// archive is UNCHANGED and a link back to my web page,
// http://harmlesslion.com, is provided as the author's site.
// It is acceptable to link directly to a subpage at harmlesslion.com
// provided that page offers a URL for that purpose
//
// Source code, if available, is provided for educational purposes
// only. You are welcome to read it, learn from it, mock
// it, and hack it up - for your own use only.
//
// Please contact me before distributing derived works or
// ports so that we may work out terms. I don't mind people
// using my code but it's been outright stolen before. In all
// cases the code must maintain credit to the original author(s).
//
// -COMMERCIAL USE- Contact me first. I didn't make
// any money off it - why should you? ;) If you just learned
// something from this, then go ahead. If you just pinched
// a routine or two, let me know, I'll probably just ask
// for credit. If you want to derive a commercial tool
// or use large portions, we need to talk. ;)
//
// Commercial use means ANY distribution for payment, whether or
// not for profit.
//
// If this, itself, is a derived work from someone else's code,
// then their original copyrights and licenses are left intact
// and in full force.
//
// http://harmlesslion.com - visit the web page for contact info
//
#include <avr/pgmspace.h>

// Standard table, keyscan code to row/col
// row1,col1, row2,col2 (if needed), 0xff if not
// Note that 0x7F must be special cased as 0x83 - this
// is to save memory! 0x7F-0x82 are not used

// these column definitions are somewhat off, we correct
// for that when we actually map the values

// See Classic99's keyboard.cpp for the generation of these codes

const signed char scan2ti994aflat[128][4] PROGMEM = {
{ -1, -1,   -1, -1 },     // 00
{  4,  7,    3,  3 },     // 01
{ -1, -1,   -1, -1 },     // 02
{  4,  7,    4,  6 },     // 03
{  4,  7,    4,  5 },     // 04
{  4,  7,    4,  2 },     // 05
{  4,  7,    4,  3 },     // 06
{  6,  7,    4,  3 },     // 07
{ -1, -1,   -1, -1 },     // 08
{  4,  7,    3,  2 },     // 09
{  4,  7,    3,  5 },     // 0A
{  4,  7,    3,  6 },     // 0B
{  4,  7,    4,  1 },     // 0C
{  4,  7,    3,  1 },     // 0D
{  4,  7,    7,  5 },     // 0E
{ -1, -1,   -1, -1 },     // 0F
{ -1, -1,   -1, -1 },     // 10
{  4,  7,   -1, -1 },     // 11
{  5,  7,   -1, -1 },     // 12
{ -1, -1,   -1, -1 },     // 13
{  6,  7,   -1, -1 },     // 14
{  6,  2,   -1, -1 },     // 15
{  4,  2,   -1, -1 },     // 16
{ -1, -1,   -1, -1 },     // 17
{ -1, -1,   -1, -1 },     // 18
{ -1, -1,   -1, -1 },     // 19
{  7,  2,   -1, -1 },     // 1A
{  5,  3,   -1, -1 },     // 1B
{  5,  2,   -1, -1 },     // 1C
{  6,  3,   -1, -1 },     // 1D
{  4,  3,   -1, -1 },     // 1E
{ -1, -1,   -1, -1 },     // 1F
{ -1, -1,   -1, -1 },     // 20
{  7,  5,   -1, -1 },     // 21
{  7,  3,   -1, -1 },     // 22
{  5,  5,   -1, -1 },     // 23
{  6,  5,   -1, -1 },     // 24
{  4,  1,   -1, -1 },     // 25
{  4,  5,   -1, -1 },     // 26
{ -1, -1,   -1, -1 },     // 27
{ -1, -1,   -1, -1 },     // 28
{  1,  7,   -1, -1 },     // 29
{  7,  1,   -1, -1 },     // 2A
{  5,  1,   -1, -1 },     // 2B
{  6,  6,   -1, -1 },     // 2C
{  6,  1,   -1, -1 },     // 2D
{  4,  6,   -1, -1 },     // 2E
{ -1, -1,   -1, -1 },     // 2F
{ -1, -1,   -1, -1 },     // 30
{  0,  6,   -1, -1 },     // 31
{  7,  6,   -1, -1 },     // 32
{  1,  6,   -1, -1 },     // 33
{  5,  6,   -1, -1 },     // 34
{  2,  6,   -1, -1 },     // 35
{  3,  6,   -1, -1 },     // 36
{ -1, -1,   -1, -1 },     // 37
{ -1, -1,   -1, -1 },     // 38
{ -1, -1,   -1, -1 },     // 39
{  0,  1,   -1, -1 },     // 3A
{  1,  1,   -1, -1 },     // 3B
{  2,  1,   -1, -1 },     // 3C
{  3,  1,   -1, -1 },     // 3D
{  3,  5,   -1, -1 },     // 3E
{ -1, -1,   -1, -1 },     // 3F
{ -1, -1,   -1, -1 },     // 40
{  0,  5,   -1, -1 },     // 41
{  1,  5,   -1, -1 },     // 42
{  2,  5,   -1, -1 },     // 43
{  2,  3,   -1, -1 },     // 44
{  3,  2,   -1, -1 },     // 45
{  3,  3,   -1, -1 },     // 46
{ -1, -1,   -1, -1 },     // 47
{ -1, -1,   -1, -1 },     // 48
{  0,  3,   -1, -1 },     // 49
{  0,  2,   -1, -1 },     // 4A
{  1,  3,   -1, -1 },     // 4B
{  1,  2,   -1, -1 },     // 4C
{  2,  2,   -1, -1 },     // 4D
{  5,  7,    0,  2 },     // 4E
{ -1, -1,   -1, -1 },     // 4F
{ -1, -1,   -1, -1 },     // 50
{ -1, -1,   -1, -1 },     // 51
{  4,  7,    2,  3 },     // 52
{ -1, -1,   -1, -1 },     // 53
{  4,  7,    6,  1 },     // 54
{  0,  7,   -1, -1 },     // 55
{ -1, -1,   -1, -1 },     // 56
{ -1, -1,   -1, -1 },     // 57
{ -1, -1,   -1, -1 },     // 58	(Caps Lock is manually handled)
{  5,  7,   -1, -1 },     // 59
{  2,  7,   -1, -1 },     // 5A
{  4,  7,    6,  6 },     // 5B
{ -1, -1,   -1, -1 },     // 5C
{  4,  7,    7,  2 },     // 5D
{ -1, -1,   -1, -1 },     // 5E
{ -1, -1,   -1, -1 },     // 5F
{ -1, -1,   -1, -1 },     // 60
{ -1, -1,   -1, -1 },     // 61
{ -1, -1,   -1, -1 },     // 62
{ -1, -1,   -1, -1 },     // 63
{ -1, -1,   -1, -1 },     // 64
{ -1, -1,   -1, -1 },     // 65
{  4,  7,    5,  3 },     // 66
{ -1, -1,   -1, -1 },     // 67
{ -1, -1,   -1, -1 },     // 68
{  4,  2,   -1, -1 },     // 69
{ -1, -1,   -1, -1 },     // 6A
{  4,  1,   -1, -1 },     // 6B
{  3,  1,   -1, -1 },     // 6C
{ -1, -1,   -1, -1 },     // 6D
{ -1, -1,   -1, -1 },     // 6E
{ -1, -1,   -1, -1 },     // 6F
{  3,  2,   -1, -1 },     // 70
{  0,  3,   -1, -1 },     // 71
{  4,  3,   -1, -1 },     // 72
{  4,  6,   -1, -1 },     // 73
{  3,  6,   -1, -1 },     // 74
{  3,  5,   -1, -1 },     // 75
{  4,  7,    3,  3 },     // 76
{  6,  7,    6,  3 },     // 77
{  6,  7,    4,  2 },     // 78
{  5,  7,    0,  7 },     // 79
{  4,  5,   -1, -1 },     // 7A
{  5,  7,    0,  2 },     // 7B
{  5,  7,    3,  5 },     // 7C
{  3,  3,   -1, -1 },     // 7D
{  6,  7,    7,  6 },     // 7E
{  4,  7,    3,  1 },     // 7F - this is really 0x83 - special case!!
};
// Shifted table, keyscan code to row/col
// row1,col1, row2,col2 (if needed), 0xff if not
// Note this table matches the flat table where the code is not different
// Note that 0x7F must be special cased as 0x83 - this
// is to save memory! 0x7F-0x82 are not used
const signed char scan2ti994ashift[128][4] PROGMEM = {
{ -1, -1,   -1, -1 },     // 00
{  4,  7,    3,  3 },     // 01
{ -1, -1,   -1, -1 },     // 02
{  4,  7,    4,  6 },     // 03
{  4,  7,    4,  5 },     // 04
{  4,  7,    4,  2 },     // 05
{  4,  7,    4,  3 },     // 06
{  6,  7,    4,  3 },     // 07
{ -1, -1,   -1, -1 },     // 08
{  4,  7,    3,  2 },     // 09
{  4,  7,    3,  5 },     // 0A
{  4,  7,    3,  6 },     // 0B
{  4,  7,    4,  1 },     // 0C
{  4,  7,    3,  1 },     // 0D
{  4,  7,    6,  3 },     // 0E
{ -1, -1,   -1, -1 },     // 0F
{ -1, -1,   -1, -1 },     // 10
{  4,  7,   -1, -1 },     // 11
{  5,  7,   -1, -1 },     // 12
{ -1, -1,   -1, -1 },     // 13
{  6,  7,   -1, -1 },     // 14
{  6,  2,    5,  7 },     // 15
{  4,  2,    5,  7 },     // 16
{ -1, -1,   -1, -1 },     // 17
{ -1, -1,   -1, -1 },     // 18
{ -1, -1,   -1, -1 },     // 19
{  7,  2,    5,  7 },     // 1A
{  5,  3,    5,  7 },     // 1B
{  5,  2,    5,  7 },     // 1C
{  6,  3,    5,  7 },     // 1D
{  4,  3,    5,  7 },     // 1E
{ -1, -1,   -1, -1 },     // 1F
{ -1, -1,   -1, -1 },     // 20
{  7,  5,    5,  7 },     // 21
{  7,  3,    5,  7 },     // 22
{  5,  5,    5,  7 },     // 23
{  6,  5,    5,  7 },     // 24
{  4,  1,    5,  7 },     // 25
{  4,  5,    5,  7 },     // 26
{ -1, -1,   -1, -1 },     // 27
{ -1, -1,   -1, -1 },     // 28
{  1,  7,   -1, -1 },     // 29
{  7,  1,    5,  7 },     // 2A
{  5,  1,    5,  7 },     // 2B
{  6,  6,    5,  7 },     // 2C
{  6,  1,    5,  7 },     // 2D
{  4,  6,    5,  7 },     // 2E
{ -1, -1,   -1, -1 },     // 2F
{ -1, -1,   -1, -1 },     // 30
{  0,  6,    5,  7 },     // 31
{  7,  6,    5,  7 },     // 32
{  1,  6,    5,  7 },     // 33
{  5,  6,    5,  7 },     // 34
{  2,  6,    5,  7 },     // 35
{  3,  6,    5,  7 },     // 36
{ -1, -1,   -1, -1 },     // 37
{ -1, -1,   -1, -1 },     // 38
{ -1, -1,   -1, -1 },     // 39
{  0,  1,    5,  7 },     // 3A
{  1,  1,    5,  7 },     // 3B
{  2,  1,    5,  7 },     // 3C
{  3,  1,    5,  7 },     // 3D
{  3,  5,    5,  7 },     // 3E
{ -1, -1,   -1, -1 },     // 3F
{ -1, -1,   -1, -1 },     // 40
{  0,  5,    5,  7 },     // 41
{  1,  5,    5,  7 },     // 42
{  2,  5,    5,  7 },     // 43
{  2,  3,    5,  7 },     // 44
{  3,  2,    5,  7 },     // 45
{  3,  3,    5,  7 },     // 46
{ -1, -1,   -1, -1 },     // 47
{ -1, -1,   -1, -1 },     // 48
{  0,  3,    5,  7 },     // 49
{  4,  7,    2,  5 },     // 4A
{  1,  3,    5,  7 },     // 4B
{  1,  2,    5,  7 },     // 4C
{  2,  2,    5,  7 },     // 4D
{  4,  7,    2,  1 },     // 4E
{ -1, -1,   -1, -1 },     // 4F
{ -1, -1,   -1, -1 },     // 50
{ -1, -1,   -1, -1 },     // 51
{  4,  7,    2,  2 },     // 52
{ -1, -1,   -1, -1 },     // 53
{  4,  7,    5,  1 },     // 54
{  0,  7,    5,  7 },     // 55
{ -1, -1,   -1, -1 },     // 56
{ -1, -1,   -1, -1 },     // 57
{ -1, -1,   -1, -1 },     // 58	(Caps Lock is manually handled)
{  5,  7,   -1, -1 },     // 59
{  2,  7,   -1, -1 },     // 5A
{  4,  7,    5,  6 },     // 5B
{ -1, -1,   -1, -1 },     // 5C
{  4,  7,    5,  2 },     // 5D
{ -1, -1,   -1, -1 },     // 5E
{ -1, -1,   -1, -1 },     // 5F
{ -1, -1,   -1, -1 },     // 60
{ -1, -1,   -1, -1 },     // 61
{ -1, -1,   -1, -1 },     // 62
{ -1, -1,   -1, -1 },     // 63
{ -1, -1,   -1, -1 },     // 64
{ -1, -1,   -1, -1 },     // 65
{  4,  7,    5,  3 },     // 66
{ -1, -1,   -1, -1 },     // 67
{ -1, -1,   -1, -1 },     // 68
{  4,  2,   -1, -1 },     // 69
{ -1, -1,   -1, -1 },     // 6A
{  4,  1,   -1, -1 },     // 6B
{  3,  1,   -1, -1 },     // 6C
{ -1, -1,   -1, -1 },     // 6D
{ -1, -1,   -1, -1 },     // 6E
{ -1, -1,   -1, -1 },     // 6F
{  3,  2,   -1, -1 },     // 70
{  0,  3,   -1, -1 },     // 71
{  4,  3,   -1, -1 },     // 72
{  4,  6,   -1, -1 },     // 73
{  3,  6,   -1, -1 },     // 74
{  3,  5,   -1, -1 },     // 75
{  6,  7,    0,  3 },     // 76
{  6,  7,    6,  3 },     // 77
{  6,  7,    4,  2 },     // 78
{  5,  7,    0,  7 },     // 79
{  4,  5,   -1, -1 },     // 7A
{  5,  7,    0,  2 },     // 7B
{  5,  7,    3,  5 },     // 7C
{  3,  3,   -1, -1 },     // 7D
{  6,  7,    7,  6 },     // 7E
{  4,  7,    3,  1 },     // 7F
};

// Extended scancode (0xE0) table, keyscan code to row/col
// row1,col1, row2,col2 (if needed), 0xff if not
// there is no corresponding shifted table,
// and no special case at the end.
const signed char scan2ti994aextend[128][4] PROGMEM = {
{ -1, -1,   -1, -1 },     // 00
{ -1, -1,   -1, -1 },     // 01
{ -1, -1,   -1, -1 },     // 02
{ -1, -1,   -1, -1 },     // 03
{ -1, -1,   -1, -1 },     // 04
{ -1, -1,   -1, -1 },     // 05
{ -1, -1,   -1, -1 },     // 06
{ -1, -1,   -1, -1 },     // 07
{ -1, -1,   -1, -1 },     // 08
{ -1, -1,   -1, -1 },     // 09
{ -1, -1,   -1, -1 },     // 0A
{ -1, -1,   -1, -1 },     // 0B
{ -1, -1,   -1, -1 },     // 0C
{ -1, -1,   -1, -1 },     // 0D
{ -1, -1,   -1, -1 },     // 0E
{ -1, -1,   -1, -1 },     // 0F
{  6,  7,    0,  6 },     // 10
{  4,  7,   -1, -1 },     // 11
{  6,  7,    5,  2 },     // 12
{ -1, -1,   -1, -1 },     // 13
{  6,  7,   -1, -1 },     // 14
{  4,  7,    4,  1 },     // 15
{ -1, -1,   -1, -1 },     // 16
{ -1, -1,   -1, -1 },     // 17
{  6,  7,    6,  6 },     // 18
{ -1, -1,   -1, -1 },     // 19
{ -1, -1,   -1, -1 },     // 1A
{ -1, -1,   -1, -1 },     // 1B
{ -1, -1,   -1, -1 },     // 1C
{ -1, -1,   -1, -1 },     // 1D
{ -1, -1,   -1, -1 },     // 1E
{  5,  7,   -1, -1 },     // 1F
{  6,  7,    5,  3 },     // 20
{  6,  7,    2,  5 },     // 21
{ -1, -1,   -1, -1 },     // 22
{  6,  7,    5,  6 },     // 23
{ -1, -1,   -1, -1 },     // 24
{ -1, -1,   -1, -1 },     // 25
{ -1, -1,   -1, -1 },     // 26
{  5,  7,   -1, -1 },     // 27
{  6,  7,    6,  1 },     // 28
{ -1, -1,   -1, -1 },     // 29
{ -1, -1,   -1, -1 },     // 2A
{  6,  7,    1,  3 },     // 2B
{ -1, -1,   -1, -1 },     // 2C
{ -1, -1,   -1, -1 },     // 2D
{ -1, -1,   -1, -1 },     // 2E
{  6,  7,    7,  2 },     // 2F
{  6,  7,    6,  2 },     // 30
{ -1, -1,   -1, -1 },     // 31
{  6,  7,    1,  6 },     // 32
{ -1, -1,   -1, -1 },     // 33
{  6,  7,    5,  1 },     // 34
{ -1, -1,   -1, -1 },     // 35
{ -1, -1,   -1, -1 },     // 36
{  6,  7,    7,  5 },     // 37
{  6,  7,    2,  2 },     // 38
{ -1, -1,   -1, -1 },     // 39
{  6,  7,    2,  3 },     // 3A
{  4,  7,    4,  1 },     // 3B
{ -1, -1,   -1, -1 },     // 3C
{ -1, -1,   -1, -1 },     // 3D
{ -1, -1,   -1, -1 },     // 3E
{  6,  7,    5,  5 },     // 3F
{  6,  7,    0,  1 },     // 40
{ -1, -1,   -1, -1 },     // 41
{ -1, -1,   -1, -1 },     // 42
{ -1, -1,   -1, -1 },     // 43
{ -1, -1,   -1, -1 },     // 44
{ -1, -1,   -1, -1 },     // 45
{ -1, -1,   -1, -1 },     // 46
{ -1, -1,   -1, -1 },     // 47
{  6,  7,    1,  5 },     // 48
{ -1, -1,   -1, -1 },     // 49
{  0,  2,   -1, -1 },     // 4A
{ -1, -1,   -1, -1 },     // 4B
{ -1, -1,   -1, -1 },     // 4C
{  4,  7,    3,  6 },     // 4D
{ -1, -1,   -1, -1 },     // 4E
{ -1, -1,   -1, -1 },     // 4F
{  6,  7,    1,  1 },     // 50
{ -1, -1,   -1, -1 },     // 51
{ -1, -1,   -1, -1 },     // 52
{ -1, -1,   -1, -1 },     // 53
{ -1, -1,   -1, -1 },     // 54
{ -1, -1,   -1, -1 },     // 55
{ -1, -1,   -1, -1 },     // 56
{ -1, -1,   -1, -1 },     // 57
{ -1, -1,   -1, -1 },     // 58
{ -1, -1,   -1, -1 },     // 59
{  2,  7,   -1, -1 },     // 5A
{ -1, -1,   -1, -1 },     // 5B
{ -1, -1,   -1, -1 },     // 5C
{ -1, -1,   -1, -1 },     // 5D
{  6,  7,    6,  5 },     // 5E
{ -1, -1,   -1, -1 },     // 5F
{ -1, -1,   -1, -1 },     // 60
{ -1, -1,   -1, -1 },     // 61
{ -1, -1,   -1, -1 },     // 62
{ -1, -1,   -1, -1 },     // 63
{ -1, -1,   -1, -1 },     // 64
{ -1, -1,   -1, -1 },     // 65
{ -1, -1,   -1, -1 },     // 66
{ -1, -1,   -1, -1 },     // 67
{ -1, -1,   -1, -1 },     // 68
{  6,  7,    7,  1 },     // 69
{ -1, -1,   -1, -1 },     // 6A
{  4,  7,    5,  3 },     // 6B
{  6,  7,    2,  1 },     // 6C
{ -1, -1,   -1, -1 },     // 6D
{ -1, -1,   -1, -1 },     // 6E
{ -1, -1,   -1, -1 },     // 6F
{  4,  7,    4,  3 },     // 70
{  4,  7,    4,  2 },     // 71
{  4,  7,    7,  3 },     // 72
{ -1, -1,   -1, -1 },     // 73
{  4,  7,    5,  5 },     // 74
{  4,  7,    6,  5 },     // 75
{ -1, -1,   -1, -1 },     // 76
{ -1, -1,   -1, -1 },     // 77
{ -1, -1,   -1, -1 },     // 78
{ -1, -1,   -1, -1 },     // 79
{  4,  7,    4,  1 },     // 7A
{ -1, -1,   -1, -1 },     // 7B
{  6,  7,    5,  2 },     // 7C
{  4,  7,    3,  6 },     // 7D
{  4,  7,    4,  1 },     // 7E
{ -1, -1,   -1, -1 },     // 7F
};

// Sequence of scancodes for copyright statement - formatted so it can be displayed in TI BASIC
// Please do not remove this feature. (watch that some key releases carry into the next line)
const unsigned char copyright[] PROGMEM = {
0x12, 0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x12,    // REM 
0x46, 0xF0, 0x46, 0x21, 0xF0, 0x21, 0x45, 0xF0, 0x45, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x72, 0xF0,    // (C) 2
0x72, 0x70, 0xF0, 0x70, 0x70, 0xF0, 0x70, 0x7D, 0xF0, 0x7D, 0x29, 0xF0, 0x29, 0x32, 0xF0, 0x32,    // 009 b
0x35, 0xF0, 0x35, 0x29, 0xF0, 0x29, 0x12, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x49, 0xF0, 0x49, 0x12,    // y M.
0x32, 0xF0, 0x32, 0xF0, 0x12, 0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x31, 0xF0, 0x31, 0x2C, 0xF0,    // Brent
0x2C, 0x29, 0xF0, 0x29, 0x1C, 0xF0, 0x1C, 0x42, 0xF0, 0x42, 0x1C, 0xF0, 0x1C, 0x5A, 0xF0, 0x5A,    //  aka<CR>
0x12, 0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x12,    // REM 
0x2C, 0xF0, 0x2C, 0xF0, 0x12, 0x3C, 0xF0, 0x3C, 0x2D, 0xF0, 0x2D, 0x1B, 0xF0, 0x1B, 0x43, 0xF0,    // Tursi
0x43, 0x4E, 0xF0, 0x4E, 0x29, 0xF0, 0x29, 0x33, 0xF0, 0x33, 0x1C, 0xF0, 0x1C, 0x2D, 0xF0, 0x2D,    // - har
0x3A, 0xF0, 0x3A, 0x4B, 0xF0, 0x4B, 0x24, 0xF0, 0x24, 0x1B, 0xF0, 0x1B, 0x1B, 0xF0, 0x1B, 0x4B,    // mlessl
0xF0, 0x4B, 0x43, 0xF0, 0x43, 0x44, 0xF0, 0x44, 0x31, 0xF0, 0x31, 0x49, 0xF0, 0x49, 0x21, 0xF0,    // ion.c
0x21, 0x44, 0xF0, 0x44, 0x3A, 0xF0, 0x3A, 0x5A, 0xF0, 0x5A, 0x12, 0x2D, 0xF0, 0x2D, 0x24, 0xF0,    // om<CR>RE
0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x12, 0x4B, 0xF0, 0x4B, 0xF0, 0x12, 0x43,    // M Li
0xF0, 0x43, 0x21, 0xF0, 0x21, 0x24, 0xF0, 0x24, 0x31, 0xF0, 0x31, 0x1B, 0xF0, 0x1B, 0x24, 0xF0,    // cense
0x24, 0x23, 0xF0, 0x23, 0x29, 0xF0, 0x29, 0x2B, 0xF0, 0x2B, 0x44, 0xF0, 0x44, 0x2D, 0xF0, 0x2D,    // d for
0x29, 0xF0, 0x29, 0x4D, 0xF0, 0x4D, 0x24, 0xF0, 0x24, 0x2D, 0xF0, 0x2D, 0x1B, 0xF0, 0x1B, 0x44,    //  perso
0xF0, 0x44, 0x31, 0xF0, 0x31, 0x1C, 0xF0, 0x1C, 0x4B, 0xF0, 0x4B, 0x5A, 0xF0, 0x5A, 0x12, 0x2D,    // nal<CR>R
0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x3C, 0xF0, 0x3C,    // EM u
0x1B, 0xF0, 0x1B, 0x24, 0xF0, 0x24, 0x29, 0xF0, 0x29, 0x44, 0xF0, 0x44, 0x31, 0xF0, 0x31, 0x4B,    // se onl
0xF0, 0x4B, 0x35, 0xF0, 0x35, 0x49, 0xF0, 0x49, 0x5A, 0xF0, 0x5A, 0x12, 0x2D, 0xF0, 0x2D, 0x24,    // y.<CR>RE
0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x12, 0x2C, 0xF0, 0x2C, 0xF0, 0x12,    // M T
0x33, 0xF0, 0x33, 0x43, 0xF0, 0x43, 0x1B, 0xF0, 0x1B, 0x29, 0xF0, 0x29, 0x1B, 0xF0, 0x1B, 0x44,    // his so
0xF0, 0x44, 0x2B, 0xF0, 0x2B, 0x2C, 0xF0, 0x2C, 0x1D, 0xF0, 0x1D, 0x1C, 0xF0, 0x1C, 0x2D, 0xF0,    // ftwar
0x2D, 0x24, 0xF0, 0x24, 0x29, 0xF0, 0x29, 0x3A, 0xF0, 0x3A, 0x1C, 0xF0, 0x1C, 0x35, 0xF0, 0x35,    // e may
0x29, 0xF0, 0x29, 0x31, 0xF0, 0x31, 0x44, 0xF0, 0x44, 0x2C, 0xF0, 0x2C, 0x5A, 0xF0, 0x5A, 0x12,    //  not<CR>
0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x32, 0xF0,    // REM b
0x32, 0x24, 0xF0, 0x24, 0x29, 0xF0, 0x29, 0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x4E, 0xF0, 0x4E,    // e re-
0x23, 0xF0, 0x23, 0x43, 0xF0, 0x43, 0x1B, 0xF0, 0x1B, 0x2C, 0xF0, 0x2C, 0x2D, 0xF0, 0x2D, 0x43,    // distri
0xF0, 0x43, 0x32, 0xF0, 0x32, 0x3C, 0xF0, 0x3C, 0x2C, 0xF0, 0x2C, 0x24, 0xF0, 0x24, 0x23, 0xF0,    // buted
0x23, 0x29, 0xF0, 0x29, 0x44, 0xF0, 0x44, 0x2D, 0xF0, 0x2D, 0x5A, 0xF0, 0x5A, 0x12, 0x2D, 0xF0,    //  or<CR>R
0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x1B, 0xF0, 0x1B, 0x44,    // EM so
0xF0, 0x44, 0x4B, 0xF0, 0x4B, 0x23, 0xF0, 0x23, 0x29, 0xF0, 0x29, 0x1D, 0xF0, 0x1D, 0x43, 0xF0,    // ld wi
0x43, 0x2C, 0xF0, 0x2C, 0x33, 0xF0, 0x33, 0x44, 0xF0, 0x44, 0x3C, 0xF0, 0x3C, 0x2C, 0xF0, 0x2C,    // thout
0x29, 0xF0, 0x29, 0x1D, 0xF0, 0x1D, 0x2D, 0xF0, 0x2D, 0x43, 0xF0, 0x43, 0x2C, 0xF0, 0x2C, 0x2C,    //  writt
0xF0, 0x2C, 0x24, 0xF0, 0x24, 0x31, 0xF0, 0x31, 0x5A, 0xF0, 0x5A, 0x12, 0x2D, 0xF0, 0x2D, 0x24,    // en<CR>RE
0xF0, 0x24, 0x3A, 0xF0, 0x3A, 0xF0, 0x12, 0x29, 0xF0, 0x29, 0x4D, 0xF0, 0x4D, 0x24, 0xF0, 0x24,    // M pe
0x2D, 0xF0, 0x2D, 0x3A, 0xF0, 0x3A, 0x43, 0xF0, 0x43, 0x1B, 0xF0, 0x1B, 0x1B, 0xF0, 0x1B, 0x43,    // rmissi
0xF0, 0x43, 0x44, 0xF0, 0x44, 0x31, 0xF0, 0x31, 0x29, 0xF0, 0x29, 0x2B, 0xF0, 0x2B, 0x2D, 0xF0,    // on fr
0x2D, 0x44, 0xF0, 0x44, 0x3A, 0xF0, 0x3A, 0x29, 0xF0, 0x29, 0x2C, 0xF0, 0x2C, 0x33, 0xF0, 0x33,    // om th
0x24, 0xF0, 0x24, 0x5A, 0xF0, 0x5A, 0x12, 0x2D, 0xF0, 0x2D, 0x24, 0xF0, 0x24, 0x3A, 0xF0, 0x3A,    // e<CR>REM
0xF0, 0x12, 0x29, 0xF0, 0x29, 0x1C, 0xF0, 0x1C, 0x3C, 0xF0, 0x3C, 0x2C, 0xF0, 0x2C, 0x33, 0xF0,    //  auth
0x33, 0x44, 0xF0, 0x44, 0x2D, 0xF0, 0x2D, 0x49, 0xF0, 0x49, 0x29, 0xF0, 0x29, 0x29, 0xF0, 0x29,    // or. 
0x12, 0x2A, 0xF0, 0x2A, 0xF0, 0x12, 0x69, 0xF0, 0x69, 0x49, 0xF0, 0x49, 0x73, 0xF0, 0x73, 0x1c,    // V1.5a
0xF0, 0x1c, 0x5A, 0xF0, 0x5A, 0x00            													   // <CR>
};
